{"version":3,"sources":["App/Form/styled.js","App/Form/index.js","App/Switcher/index.js","App/Tasks/styled.js","App/Tasks/index.js","App/Buttons/styled.js","App/Buttons/index.js","App/Section/styled.js","App/Section/index.js","App/Header/index.js","App/Container/styled.js","App/Container/index.js","App/languages.js","App/App.js","App/useLanguage.js","App/useTasks.js","reportWebVitals.js","GlobalStyle.js","index.js","theme.js"],"names":["FormComponent","styled","form","theme","color","background","breakpoint","tabletMax","FormInput","input","borders","Button","button","fontLight","primary","Form","addNewTask","inputPlaceholder","formButtonInnerText","useState","newTaskContent","setNewTaskContent","inputRef","useRef","onSubmit","event","preventDefault","trimmedContent","trim","current","focus","ref","value","placeholder","onChange","target","autoFocus","Switcher","languages","changeLanguage","map","language","onClick","key","TaskList","ul","ListItem","li","hidden","css","TaskContent","span","done","toggleDone","shadows","remove","Tasks","tasks","hideDone","removeTask","toggleTaskDone","task","id","content","Element","div","mobileMax","disabled","Buttons","toggleHideDone","setAllDone","setDoneButtonInnerText","toggleButtonInnerTextHidden","toggleButtonInnerTextVisible","length","every","SectionContainer","section","HeaderContainer","Header","h2","Section","title","body","extraHeaderContent","MainContainer","main","Container","children","headerTitle","sectionTitle","tasksSectionTitle","App","setHideDone","localStorage","getItem","langId","setLangId","useEffect","setItem","useLanguage","JSON","parse","setTasks","stringify","filter","useTasks","findIndex","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39ead6dd.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const FormComponent = styled.form`\r\n    background-color: ${({ theme }) => theme.color.background};\r\n    padding: 10px;\r\n    display: flex;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.tabletMax}) {\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport const FormInput = styled.input`\r\n    border: solid 1px ${({ theme }) => theme.color.borders};\r\n    padding: 10px;\r\n    flex-grow: 1;\r\n    margin: 10px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    display: flex;\r\n    align-content: center;\r\n    justify-content: center;\r\n    color: ${({ theme }) => theme.color.fontLight};\r\n    background-color: ${({ theme }) => theme.color.primary};\r\n    border: none;\r\n    padding: 5px;\r\n    padding: 10px;\r\n    margin: 10px;\r\n    transition: background 0.5s, transform 1s;\r\n\r\n    &:hover {\r\n        filter: brightness(130%);\r\n        transform: scale(1.05);\r\n    }\r\n\r\n    &:active {\r\n        filter: brightness(160%);\r\n        box-shadow: inset 1px 1px 2px darkgrey;\r\n    }\r\n`;","import { useRef, useState } from \"react\";\r\nimport { FormComponent, FormInput, Button } from \"./styled\";\r\n\r\nconst Form = ({ addNewTask, inputPlaceholder, formButtonInnerText }) => {\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n    const inputRef = useRef(null);\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        const trimmedContent = newTaskContent.trim();\r\n        if (trimmedContent === \"\") {\r\n            setNewTaskContent(\"\");\r\n            return;\r\n        }\r\n        addNewTask(trimmedContent);\r\n        setNewTaskContent(\"\");\r\n        inputRef.current.focus();\r\n    };\r\n\r\n    return (\r\n        <FormComponent onSubmit={onFormSubmit}>\r\n            <FormInput\r\n                ref={inputRef}\r\n                value={newTaskContent}\r\n                placeholder={inputPlaceholder}\r\n                onChange={({ target }) => setNewTaskContent(target.value)}\r\n                autoFocus\r\n            />\r\n            <Button>{formButtonInnerText}</Button>\r\n        </FormComponent>\r\n    )\r\n};\r\n\r\nexport default Form;","const Switcher = ({ languages, changeLanguage }) => (\r\n    <div>\r\n        {languages.map(language => (\r\n            <button\r\n                key={language.key}\r\n                onClick={() => changeLanguage(language.key)}\r\n            >\r\n                {language.key}\r\n            </button>\r\n        ))}\r\n    </div>\r\n);\r\n\r\nexport default Switcher;","import styled, { css } from \"styled-components\";\r\n\r\nexport const TaskList = styled.ul`\r\n    background-color: ${({ theme }) => theme.color.background};\r\n    padding: 15px;\r\n    list-style-type: none;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n    display: grid;\r\n    grid-gap: 10px;\r\n    grid-template-columns: auto 1fr auto;\r\n    align-items: center;\r\n    padding: 6px;\r\n    border-style: solid;\r\n    border-width: 0px 0px 1px 0px;\r\n    border-color: ${({ theme }) => theme.color.borders};\r\n\r\n    ${({ hidden }) => hidden && css`\r\n        display: none;\r\n    `}\r\n`;\r\n\r\nexport const TaskContent = styled.span`\r\n    word-break: break-all;\r\n\r\n    ${({ done }) => done && css`\r\n        text-decoration: line-through;\r\n    `}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-content: center;\r\n    color: ${({ theme }) => theme.color.fontLight};\r\n    border: none;\r\n    padding: 5px;\r\n    width: 28px;\r\n    height: 28px;\r\n    transition: 0.5s;\r\n\r\n    ${({ toggleDone }) => toggleDone && css`\r\n        background-color: ${({ theme }) => theme.color.toggleDone};\r\n\r\n        &:hover {\r\n            filter: brightness(130%);\r\n        }\r\n\r\n        &:active {\r\n            filter: brightness(160%);\r\n            box-shadow: inset 1px 1px 3px ${({ theme }) => theme.color.shadows};\r\n        }\r\n    `}\r\n\r\n    ${({ remove }) => remove && css`\r\n        background-color: ${({ theme }) => theme.color.remove};\r\n\r\n        &:hover {\r\n            filter: brightness(130%);\r\n        }\r\n\r\n        &:active {\r\n            filter: brightness(160%);\r\n            box-shadow: inset 1px 1px 3px ${({ theme }) => theme.color.shadows};\r\n        }\r\n    `}\r\n`;","import { TaskList, ListItem, TaskContent, Button } from \"./styled\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n  <TaskList>\r\n    {tasks.map(task => (\r\n      <ListItem\r\n        key={task.id}\r\n        hidden={task.done && hideDone}\r\n      >\r\n        <Button\r\n          toggleDone\r\n          onClick={() => toggleTaskDone(task.id)}\r\n        >\r\n          {task.done ? \"✔\" : \" \"}\r\n        </Button>\r\n        <TaskContent done={task.done}>\r\n          {task.content}\r\n        </TaskContent>\r\n        <Button\r\n          remove\r\n          onClick={() => removeTask(task.id)}\r\n        >\r\n          🗑\r\n        </Button>\r\n      </ListItem>\r\n    ))}\r\n  </TaskList>\r\n);\r\n\r\nexport default Tasks;","import styled from \"styled-components\";\r\n\r\nexport const Element = styled.div`\r\n    display: grid;\r\n    gap: 10px;\r\n    grid-template-columns: auto auto;\r\n    \r\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    color: ${({ theme }) => theme.color.primary};\r\n    font-weight: 400;\r\n    background-color: transparent;\r\n    border: none;\r\n    transition: 0.5s;\r\n\r\n    &:hover {\r\n        filter: brightness(110%);\r\n    }\r\n\r\n    &:active {\r\n        filter: brightness(120%);\r\n    }\r\n\r\n    &:disabled {\r\n        color: ${({ theme }) => theme.color.disabled};\r\n        cursor: unset;\r\n    }\r\n`;\r\n\r\n","import { Element, Button } from \"./styled\";\r\n\r\nconst Buttons = ({\r\n    tasks,\r\n    hideDone,\r\n    toggleHideDone,\r\n    setAllDone,\r\n    setDoneButtonInnerText,\r\n    toggleButtonInnerTextHidden,\r\n    toggleButtonInnerTextVisible\r\n}) => (\r\n    <Element>\r\n        {tasks.length > 0 && (\r\n            <>\r\n                <Button onClick={toggleHideDone}>\r\n                    {hideDone ? toggleButtonInnerTextHidden : toggleButtonInnerTextVisible}\r\n                </Button>\r\n                <Button\r\n                    onClick={setAllDone}\r\n                    disabled={tasks.every(({ done }) => done)}\r\n                >\r\n                    {setDoneButtonInnerText}\r\n                </Button>\r\n            </>\r\n        )}\r\n    </Element>\r\n\r\n);\r\n\r\nexport default Buttons;","import styled from \"styled-components\";\r\n\r\nexport const SectionContainer = styled.section`\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nexport const HeaderContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr auto auto;\r\n    gap: 10px;\r\n    align-items: center;\r\n    background-color: ${({ theme }) => theme.color.background};\r\n    padding-right: 10px;\r\n    margin: 0 0 1px 0;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}) {\r\n        grid-template-columns: 1fr;\r\n        justify-content: center;\r\n    }\r\n`;\r\n\r\nexport const Header = styled.h2`\r\n    background-color: ${({ theme }) => theme.color.background};\r\n    padding: 15px;\r\n    font-weight: 700;\r\n    font-size: 20px;\r\n    margin: 0 0 1px 0;\r\n`;","import { SectionContainer, HeaderContainer, Header } from \"./styled\";\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n    <SectionContainer>\r\n        <HeaderContainer>\r\n            <Header>\r\n                {title}\r\n            </Header>\r\n            {extraHeaderContent}\r\n        </HeaderContainer>\r\n        {body}\r\n    </SectionContainer>\r\n);\r\n\r\nexport default Section;","const Header = ({ title }) => (\r\n  <header>\r\n    <h1>{title}</h1>\r\n  </header>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const MainContainer = styled.main`\r\n  padding: 10px;\r\n`;","import { MainContainer } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n    <MainContainer>\r\n        {children}\r\n    </MainContainer>\r\n);\r\n\r\nexport default Container;","const languages = [\r\n  {\r\n    key: \"EN\",\r\n    headerTitle: \"To-do list\",\r\n    sectionTitle: \"Add new task\",\r\n    tasksSectionTitle: \"List of tasks\",\r\n    inputPlaceholder: \"What are you going to do?\",\r\n    formButtonInnerText: \"Add task\",\r\n    setDoneButtonInnerText: \"Finish all\",\r\n    toggleButtonInnerTextHidden: \"Show done\",\r\n    toggleButtonInnerTextVisible: \"Hide done\"\r\n  },\r\n  {\r\n    key: \"PL\",\r\n    headerTitle: \"Lista zadań\",\r\n    sectionTitle: \"Dodaj nowe zadanie\",\r\n    tasksSectionTitle: \"Lista zadań\",\r\n    inputPlaceholder: \"Co jest do zrobienia?\",\r\n    formButtonInnerText: \"Dodaj zadanie\",\r\n    setDoneButtonInnerText: \"Ukończ wszystkie\",\r\n    toggleButtonInnerTextHidden: \"Pokaż ukończone\",\r\n    toggleButtonInnerTextVisible: \"Ukryj ukończone\"\r\n  }\r\n];\r\n\r\nexport default languages;","import { useState } from 'react';\nimport { useTasks } from './useTasks';\nimport { useLanguage } from './useLanguage';\nimport Form from \"./Form\";\nimport Switcher from \"./Switcher\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from './Header';\nimport Container from \"./Container\";\nimport languages from \"./languages\";\n\nfunction App() {\n\n  const [hideDone, setHideDone] = useState(false);\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone);\n  };\n\n  const { langId, setLangId } = useLanguage();\n\n  const changeLanguage = (key) => {\n    setLangId(languages.findIndex(language => language.key === key));\n  };\n\n  const {\n    tasks,\n    toggleTaskDone,\n    removeTask,\n    setAllDone,\n    addNewTask,\n  } = useTasks();\n\n  return (\n    <Container>\n      <Header title={languages[langId].headerTitle} />\n      <Section\n        title={languages[langId].sectionTitle}\n        body={\n          <Form\n            addNewTask={addNewTask}\n            inputPlaceholder={languages[langId].inputPlaceholder}\n            formButtonInnerText={languages[langId].formButtonInnerText}\n          />\n        }\n        extraHeaderContent={\n          <Switcher\n            languages={languages}\n            changeLanguage={changeLanguage}\n          />\n        }\n      />\n      <Section\n        title={languages[langId].tasksSectionTitle}\n        body={\n          <Tasks\n            tasks={tasks}\n            hideDone={hideDone}\n            removeTask={removeTask}\n            toggleTaskDone={toggleTaskDone}\n          />\n        }\n        extraHeaderContent={\n          <Buttons\n            tasks={tasks}\n            hideDone={hideDone}\n            toggleHideDone={toggleHideDone}\n            setAllDone={setAllDone}\n            setDoneButtonInnerText={languages[langId].setDoneButtonInnerText}\n            toggleButtonInnerTextVisible={languages[langId].toggleButtonInnerTextVisible}\n            toggleButtonInnerTextHidden={languages[langId].toggleButtonInnerTextHidden}\n          />\n        }\n      />\n    </Container>\n  );\n}\n\nexport default App;","import { useState, useEffect } from \"react\";\r\n\r\nexport const useLanguage = () => {\r\n\r\n    const [langId, setLangId] = useState(localStorage.getItem(\"langId\") || 0);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"langId\", langId);\r\n    }, [langId]);\r\n\r\n    return { langId, setLangId };\r\n}","import { useState, useEffect } from \"react\";\r\n\r\nexport const useTasks = () => {\r\n    const [tasks, setTasks] = useState(\r\n        JSON.parse(localStorage.getItem(\"tasks\"))\r\n        ||\r\n        [\r\n            { id: 1, content: \"task1\", done: false },\r\n            { id: 2, content: \"task2\", done: true },\r\n        ]\r\n    );\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n    }, [tasks]);\r\n\r\n    const removeTask = (id) => {\r\n        setTasks(tasks => tasks.filter(task => task.id !== id));\r\n    };\r\n\r\n    const toggleTaskDone = (id) => {\r\n        setTasks(tasks => tasks.map(task => {\r\n            if (task.id === id) {\r\n                return { ...task, done: !task.done };\r\n            }\r\n\r\n            return task;\r\n        }))\r\n    };\r\n\r\n    const setAllDone = () => {\r\n        setTasks(tasks => tasks.map(task => ({\r\n            ...task,\r\n            done: true,\r\n        })));\r\n    };\r\n\r\n    const addNewTask = (content) => {\r\n        setTasks(tasks => [\r\n            ...tasks,\r\n            {\r\n                content,\r\n                done: false,\r\n                id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\r\n            },\r\n        ])\r\n    };\r\n\r\n    return {\r\n        tasks,\r\n        toggleTaskDone,\r\n        removeTask,\r\n        setAllDone,\r\n        addNewTask,\r\n    };\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n\r\nhtml {\r\n  box-sizing: border-box;\r\n}\r\n\r\n*, ::after, ::before {\r\n  box-sizing: inherit;\r\n}\r\n\r\nbody {\r\n  background-color: #eee;\r\n  max-width: 1024px;\r\n  min-width: 320px;\r\n  margin: 0 auto;\r\n  font-family: 'Montserrat', sans-serif;\r\n  font-size: 14 px;\r\n}\r\n\r\nbutton {\r\n  cursor: pointer;\r\n}`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\r\n    color: {\r\n        primary: \"teal\",\r\n        background: \"#fff\",\r\n        fontLight: \"#fff\",\r\n        disabled: \"#ccc\",\r\n        borders: \"#ddd\",\r\n        shadows: \"darkgrey\",\r\n        toggleDone: \"forestgreen\",\r\n        remove: \"crimson\",\r\n    },\r\n    breakpoint: {\r\n        mobileMax: \"480px\",\r\n        tabletMax: \"768px\",\r\n    },\r\n}"],"sourceRoot":""}